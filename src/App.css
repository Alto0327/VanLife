
:root {
    /* Based on your .nav-bar CSS: min-height: 10vh; and padding: 24px 60px; */
    /* Since 10vh is the minimum, we'll use a safe, slightly larger value for the calculation */
    --header-height: 10vh; 
    --footer-height: 0px; 
}



html, body, #root {
    height: 100%;
    margin: 0;
    padding: 0;
}

.nav-bar {
  width: 100vw;
  min-height: 10vh;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #FFF7ED;
  color: black;
  text-decoration: none; 
  padding: 24px 60px;
}

.nav-bar a {
  text-decoration: none;
  color: black;
}

.nav-bar a{
  font-weight: 900;
  font-size: 24px;
}

.nav-right a{
  padding: 24px;
  font-size: 16px;
  font-weight: 600;
  color: #4D4D4D;
}


/* Add this to your App.css */
.main-content-area {
    /* This calculation ensures the content area fills the remaining space */
    min-height: calc(100vh - var(--header-height) - var(--footer-height)); 
    
    /* The second min-height is often redundant when using the calc() above, 
       but if you want to ensure a very large area even on a small screen: */
    /* min-height: 500px; */ /* REMOVE this line if you only want the dynamic height */

    /* Ensure content stacks normally, preventing unwanted vertical centering */
    display: block; 
    
    /* Add padding/margin to match your overall layout */
    padding-bottom: 50px; /* Example to give space above the (assumed) footer */
}

.host-nav {
    display: flex;
}

.host-nav a {
    text-decoration: none;
    color: #4D4D4D;
    font-weight: 500;
    padding: 5px 20px;
}

.host-nav a:hover {
    color: #161616;
    text-decoration: underline;
    font-weight: 600;
}